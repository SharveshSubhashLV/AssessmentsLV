# -*- coding: utf-8 -*-
"""FA_LAB-2.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1bAdBQfn0oPceuD5jSdEkez7MXx0m5p1f
"""

import pandas as pd
df = pd.read_csv("/content/penguins_classification.csv")
df.info()

df.head()

df.describe()

import pandas as pd
from matplotlib import pyplot as plt
from sklearn.preprocessing import LabelEncoder
from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestClassifier
from sklearn.tree import DecisionTreeClassifier
from sklearn.linear_model import LogisticRegression
import xgboost as xgb
from sklearn.metrics import accuracy_score, classification_report, confusion_matrix
import seaborn as sns

lbl_enc = LabelEncoder()
df['species'] = lbl_enc.fit_transform(df['species'])
df

df.isna().sum()

df['bill_depth_mm'].fillna(method='ffill', inplace=True)

df.isna().sum()

duplicates = df.duplicated(keep=False)
df['dup_bool'] = duplicates
print(df[df['dup_bool'] == True].count())
df.drop('dup_bool',axis=1,inplace=True)
df.head(1)

df['island'] = lbl_enc.fit_transform(df['island'])

df

from sklearn.preprocessing import MinMaxScaler
m = MinMaxScaler()
df2 = df.copy()
df2 = m.fit_transform(df2)
df2 = pd.DataFrame(df2,columns=df.columns.tolist())
df2

x = df2.drop(['species'],axis=1)
y = df2['species']
x

xtrain, xtest, ytrain, ytest = train_test_split(x,y,test_size=0.3, random_state=42)

xgb_clf = xgb.XGBClassifier(n_estimators=100, learning_rate=0.1, max_depth=3, random_state=42)
xgb_clf.fit(xtrain, ytrain)
y_pred = xgb_clf.predict(xtest)
accuracy = accuracy_score(ytest, y_pred)
print("XGB Accuracy:", accuracy)
print(classification_report(ytest, y_pred))

"""#XGBoost classifier has given an accuracy of 98.7% along with F1-score of 0.99, precision 98%, recall 100%

**Below is the confusion Matrix**
"""

import seaborn as sns
conf_matrix = confusion_matrix(ytest, y_pred)
sns.heatmap(conf_matrix, annot=True, fmt='g', cmap='Blues')
plt.xlabel('Predicted labels')
plt.ylabel('True labels')
plt.title('Confusion Matrix')
plt.show()