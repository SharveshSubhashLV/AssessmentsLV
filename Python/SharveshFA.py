# -*- coding: utf-8 -*-
"""FA-Python.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1OBPbtYdXQzYBQ21Dpdhsczuq1yN25N5n
"""

import pandas as pd
df = pd.read_csv("/content/sample_data/FinalDataset_IPL.csv")
df

df.size

df.columns

df.dtypes

df.isna().sum()

"""
Data has no null values or np.na values"""

df.duplicated().sum()

"""There are no duplicate values, it is clean

#Q3 Descriptive Statistics
"""

df.describe()

"""This above table clearly gives us an idea of the central tendencies, quartiles, maximum and minimum of each numerical column in the table.

Median, Range, Mode and Variance of High Scores of all matches
"""

df['highscore'].median()

df['highscore'].max() - df['highscore'].min()

df['highscore'].mode()

df['highscore'].var()

"""Clearly, most highscores are tending to be around 68 to 70, meaning, on an average, highscores are clearly more than half century score."""

print("Variance:")
print(df['margin'].var())
print("\nMedian:")
print(df['margin'].median())
print("\nMode:")
print(df['margin'].mode())
print("\nRange")
print(df['margin'].max() -  df['margin'].min())

"""Clearly, most margins of win are tending to be between 5 to 8. It can be either wickets or runs.

#Q4
"""

#
import matplotlib.pyplot as p
df1 = pd.DataFrame(df['match_winner'].value_counts())
df1 = df1.reset_index()
df1.columns = ['Match_Winner', "Count"]
df1 = df1.head(5)

p.pie(df1['Count'], labels = df1['Match_Winner'],autopct='%1.1f%%', startangle = 90)
p.legend(title = "Teams", bbox_to_anchor = (1,1))
p.title("Winners distribution")
p.show()

df2 = df.groupby('venue')['match_id'].count()
df2 = df2.reset_index(name="Count")
df3 = df2.sort_values(by="Count", ascending=False)
df3 = df3.head(3)

p.bar(df3['venue'],df3['Count'], color ='maroon',width = 0.4)
p.title('Top 3 Venues of matches')
p.show()

df

df5 = df['won_by'].value_counts()
df5 = df5.reset_index(name="Count")
df5

import seaborn as s
s.barplot(x=df5['won_by'],y=df5['Count'])
p.title("Won by RUNS or Wickets?")
p.show()

"""#Special Analysis for CSK"""

import datetime as dt
df6 = df[(df['team1']=="Chennai")]
df7 = df[(df['team2']=="Chennai")]
dfc = pd.concat([df6,df7])
dfc = dfc['toss_decision'].value_counts().plot()
p.legend()

"""#Q5"""

dfcw=dfc[dfc['match_winner']=="Chennai"]
dfcw.

"""#Q6"""

p.figure(figsize=(10, 6))
s.boxplot(data=df['highscore'])
p.title('Boxplot of highscores')
p.ylabel('highscores')
p.xticks(rotation=45)
p.tight_layout()
p.show()

"""The boxplot when applied to the highscores column, shows how rare it is for a player to score as high as 140. This is an outlier technically as per data. But this need not be removed for this scenario.

#Q7
"""

df.groupby(['venue','match_winner'])['match_winner'].count()

"""#Q8"""

df8 = df['player_of_the_match'].value_counts()
df8 = df8.head(5)
df8 = pd.DataFrame(df8, columns = ["count"])
df8

dfp = df.copy()
t = pd.merge(dfp,df8, on='player_of_the_match', how="right")

"""#Q9

#DATA Summary

Clearly, From Q8, we can clearly see that Kaldeep yadav is the most common player of the match.
His scores have impacted his team several times. Most of the time whenever he is the plyer of the match, he is also the best bowler.
"""
